@model FoodDeliveryWebAppFinal.Models.EditView

@section Styles {
    <style>
        /* Hero Section */
        .auth-hero {
            background: linear-gradient(135deg, #ff9800 0%, #ff7043 100%);
            padding: 4rem 0;
            margin-bottom: -3rem;
            border-radius: 0 0 50px 50px;
            box-shadow: 0 4px 20px rgba(255, 152, 0, 0.2);
            text-align: center;
            color: white;
            position: relative;
        }

        .hero-title {
            font-size: 2.5rem;
            font-weight: 800;
            margin-bottom: 1rem;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
        }

        /* Profile Card */
        .profile-card {
            background: white;
            border-radius: 20px;
            padding: 2.5rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 10;
            margin-bottom: 2rem;
            max-width: 500px;
            width: 100%;
        }

        /* Form Controls */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            display: block;
        }

        .form-control {
            width: 100%;
            padding: 1rem 1.5rem;
            border-radius: 25px;
            border: 2px solid #e0e0e0;
            background-color: white;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: #ff9800;
            box-shadow: 0 4px 15px rgba(255, 152, 0, 0.1);
        }

        /* Validation */
        .validation-summary-errors {
            background: #ffebee;
            color: #f44336;
            padding: 1rem;
            border-radius: 15px;
            margin-bottom: 1.5rem;
            font-size: 0.9rem;
        }

        .validation-summary-errors ul {
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .field-validation-error {
            color: #f44336;
            font-size: 0.85rem;
            margin-top: 0.5rem;
            display: block;
        }

        /* Success Message */
        .alert-success {
            background: #e8f5e9;
            color: #4caf50;
            padding: 1rem;
            border-radius: 15px;
            margin-bottom: 1.5rem;
            font-size: 0.95rem;
            text-align: center;
        }

        /* Buttons */
        .btn-container {
            display: flex;
            gap: 1rem;
            margin-top: 2rem;
        }

        .save-btn {
            background: linear-gradient(45deg, #ff9800, #ff7043);
            border: none;
            padding: 1rem 2rem;
            border-radius: 25px;
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
            flex: 1;
            text-align: center;
            font-size: 1rem;
        }

        .save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(255, 152, 0, 0.3);
        }

        .back-btn {
            background: white;
            border: 2px solid #ff9800;
            color: #ff9800;
            padding: 1rem 2rem;
            border-radius: 25px;
            font-weight: 600;
            transition: all 0.3s ease;
            text-decoration: none;
            flex: 1;
            text-align: center;
            font-size: 1rem;
        }

        .back-btn:hover {
            background: #fff3e0;
            color: #ff7043;
            text-decoration: none;
            transform: translateY(-2px);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .auth-hero {
                padding: 3rem 0;
            }

            .hero-title {
                font-size: 2rem;
            }

            .profile-card {
                padding: 1.5rem;
                margin: 0 1rem;
            }

            .form-control {
                padding: 0.8rem 1.2rem;
            }

            .btn-container {
                flex-direction: column;
            }
        }
    </style>
}

<div class="auth-hero">
    <div class="container">
        <h1 class="hero-title">Edit Profile</h1>
    </div>
</div>

<div class="container py-5">
    <div class="d-flex justify-content-center">
        <div class="profile-card">
            @if (TempData["Success"] != null)
            {
                <div class="alert-success">
                    @TempData["Success"]
                </div>
            }

            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="validation-summary-errors"></div>

                <div class="form-group">
                    <label asp-for="FullName" class="form-label">Full Name</label>
                    <input asp-for="FullName" class="form-control" placeholder="Enter your full name">
                    <span asp-validation-for="FullName" class="field-validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                    <input asp-for="PhoneNumber" class="form-control" placeholder="Enter your phone number">
                    <span asp-validation-for="PhoneNumber" class="field-validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Address" class="form-label">Address</label>
                    <input asp-for="Address" class="form-control" placeholder="Enter your address">
                    <span asp-validation-for="Address" class="field-validation-error"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Age" class="form-label">Age</label>
                    <select asp-for="Age" class="form-control">
                        <option value="">Prefer not to say</option>
                        @for (int i = 18; i <= 100; i++)
                        {
                            if (Model.Age == i)
                            {
                                <option value="@i" selected>@i</option>
                            }
                            else
                            {
                                <option value="@i">@i</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="Age" class="field-validation-error"></span>
                </div>

                <div class="btn-container">
                    <button type="submit" class="save-btn">
                        Save Changes
                    </button>
                    <a asp-action="Index" asp-controller="Home" class="back-btn">
                        Back to Home
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- intl-tel-input Script -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/intlTelInput.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var input = document.querySelector("#phoneNumber"); // Ensure this matches your input ID
        var hiddenInput = document.querySelector("#fullPhoneNumber");

        var iti = window.intlTelInput(input, {
            initialCountry: "auto",
            geoIpLookup: function (callback) {
                fetch('https://ipinfo.io/json?token=YOUR_IPINFO_TOKEN') // Replace YOUR_IPINFO_TOKEN
                    .then(response => response.json())
                    .then(data => callback(data.country))
                    .catch(() => callback('US')); // Default fallback
            },
            preferredCountries: ['mk', 'us', 'gb', 'fr', 'it'], // Add your preferred countries
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js" // Utility script for parsing/formatting
        });

        input.addEventListener("blur", function () {
            hiddenInput.value = iti.getNumber(); // Save the full international number in the hidden input
        });
    });
</script>
